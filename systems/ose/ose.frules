compare (item1,item2)= 
    (if (item1 > item2) then
        -1
    else
        (if (item1 < item2) then
            1
        else
            0
        )
    )


stats(n) = 
    (if (n == 3) then -3 else
    (if (n < 6) then -2 else
    (if (n < 9) then -1 else
    (if (n < 13) then 0 else
    (if (n < 16) then 1 else
    (if (n < 18) then 2 else 3))))))

D20Roll(char) = ([1d20], ((baseline,throws)->
                    (   (((char.Attributes).Wis).Modifier)
                        + 
                        (sum(((first (throws)).rolls)))))
                    )

characterTable = ruleset
{
    Basics = table
    {
        AC = integer {}

        Initiative = integer {}
        Alignment = string {}
    }
    Attributes = keyvalues
    {
        singular = "Ability score" 
        keys = ["Str","Int","Wis","Dex","Con","Cha" ]
        valueType = custom
        {
            Score = integer
            {
                default = 10
                minvalue = 3
                maxvalue = 18
            }
            Modifier=modifier
            {
                value=(stats(Score))
                valuedice= 1d20
            }
        }
    }
    'Saving throws' = keyvalues
    {
        keys = ["Death/poison","Wands","Paralysis/petrify","Breath attacks","Spells/rods/staves"]
        valueType = custom
        {
            Score = integer
            { 
                default = 10
                valuedice = (D20Roll(characterTable))                
            }
        }
    }
    Hitpoints = table
    {
        Current = integer { editable = live}
        Max = integer {}
    }
    Attacks = table
    {

    }
    Classes = list
    {
        tableLayout = layout
        { 
            size = wide
            rowTitle = hidden
        }
        source = (secondary.Classes)
        singular = "Class"
        editable = character
    }
}

classrules = ruleset
{
    rulesetConfiguration = 
    {
        defaultImage = "/images/character.svg"
    }

    Stats = table
    { 
        Level = integer {}
        XP = integer {}
        'To next' = integer {}
        HD = integer {}
    }
}

weaponStats =ruleset
        {
            rulesetConfiguration =
            {
                defaultImage = "/images/armour.svg"
            }
            Stats= table
            {
                Damage=modifier
                {minvalue = -6
                maxvalue = +6}
            }
        }
armorStats= ruleset
        {
            rulesetConfiguration =
            {
                defaultImage = "/images/armour.svg"
            }
            Stats= table
            {
                'Damage Capacity'=modifier
                {minvalue = -6
                maxvalue = +6}
            }
        }
OSE = system
{
    characters = characterTable
    creatures = characterTable
    Classes = classrules
    Weapons = weaponStats
    Armor= armorStats
    description="Old School DnD"
    secondaryTypes = ["Classes"]
    initiativeCompare(item1,item2) = (compare ((intValueFromEnumString (fudgevalues,item1)), (intValueFromEnumString (fudgevalues,item2))))
    quickdice =[1d4, 1d6, 1d8, 1d10, 1d12, 1d20]
}

