#include "/systems/common.frules"

pointsToSkill(points)=
 (if((points-((points/3)*3)) > 0) then (
                         ((toString((points/3)))+"d6+")+(toString((points-((points/3)*3))))
                        ) 
                        else ((toString((points/3)))+"d6")
                        )
pointsToDice(points)=
 dice
  {
    number=(points/3)
    sides=6
    bonus=(points-((points/3)*3))
  }

rethrow (extra) = ([1d6],((baseline,throws)-> 
  (if ((first(
            ((first (throws))
            .rolls))) == 6) then
            (rethrow ((extra + (sum(((first (throws))
            .rolls))))))
         else
              (extra + (
              sum(
                ((first (throws))
                .rolls)))  )
              )))


oneOnWild(rolls) = 
  (if((count(rolls)) == 1) then
    0
   else
    ((( sum(rolls)) - 1) - (max(rolls)))
  )                

starDice (dice) = ([dice],((baseline,throws)-> 
  (if ((first(
            ((first (throws))
            .rolls))) == 6) then
            (rethrow ( ((sum(((first (throws))
            .rolls))) + ((first (throws))
            .bonus)
            )))
         else
        (if ((first(
            ((first (throws))
            .rolls))) == 1) then
              ((
              oneOnWild(
                ((first (throws))
                .rolls))) + ((first (throws))
            .bonus) 
              )
         else
              ((
              sum(
                ((first (throws))
                .rolls))) + ((first (throws))
            .bonus)) 
              ))))
              
              
              
characterTable = ruleset
{
    
  'Attributes' = keyvalues
      {
          singular = "Attribute" 
          keys = ["Dexterity","Knowledge","Mechanical","Perception","Strength","Technical" ]
          valueType = custom
          {
              Points=integer
              {
                default=9
                minvalue=1
                maxvalue=25
                valuedice=(starDice((pointsToDice(Points)), 0))
                render=(pointsToSkill(Points))
              }

          }
      } 
    'Dexterity Skills' = keyvalues
        {
            singular = "Dex Skill" 
            editablekeys = character
            keys = ["Blaster", "Dodge", "Grenade", "Lightsaber","Melee", "Pick pocket"]
            valueType = custom
          {
              Points=integer
              {
                valuedice=(starDice((pointsToDice((Points + ((Attributes.'Dexterity').Points)))), 0))
                render=(pointsToSkill((Points + ((Attributes.'Dexterity').Points))))
                default=0
                minvalue=0
                maxvalue=25
              }

          }
        }
    'Knowledge Skills' = keyvalues
        {
            singular = "Knowledge Skill" 
            editablekeys = character
            keys = ["Alien species", "Bureaucracy", "Cultures", "Languages","Planetary systems", "Streetwise", "Survival"]
            valueType = custom
          {
              Points=integer
              {
                valuedice=(starDice((pointsToDice((Points + ((Attributes.'Knowledge').Points)))), 0))
                render=(pointsToSkill((Points + ((Attributes.'Knowledge').Points))))
                
                default=0
                minvalue=0
                maxvalue=25
              }

          }
        }
    'Mechanical Skills' = keyvalues
        {
            singular = "Mechanical Skill" 
            editablekeys = character
            keys = ["Astrogation", "Beast riding", "Com scan", "Gunnery","Repulsorlift operation", "Shields", "Spaceship piloting"]
            valueType = custom
          {
              Points=integer
              {
                valuedice=(starDice((pointsToDice((Points + ((Attributes.'Mechanical').Points)))), 0))
                render=(pointsToSkill((Points + ((Attributes.'Mechanical').Points))))
                
                default=0
                minvalue=0
                maxvalue=25
              }

          }
        }
    'Perception Skills' = keyvalues
        {
            singular = "Perception Skill" 
            editablekeys = character
            keys = ["Bargain", "Beast riding", "Con", "Gambling","Search", "Sneak"]
            valueType = custom
          {
              Points=integer
              {
                valuedice=(starDice((pointsToDice((Points + ((Attributes.'Perception').Points)))), 0))
                render=(pointsToSkill((Points + ((Attributes.'Perception').Points))))
                
                default=0
                minvalue=0
                maxvalue=25
              }
          }
        }
    'Strength Skills' = keyvalues
        {
            singular = "Perception Skill" 
            editablekeys = character
            keys = ["Brawling", "Climbing jumping", "Lifting", "Swimming"]
            valueType = custom
          {
              Points=integer
              {
                valuedice=(starDice((pointsToDice((Points + ((Attributes.'Strength').Points)))), 0))
                render=(pointsToSkill((Points + ((Attributes.'Strength').Points))))
                
                default=0
                minvalue=0
                maxvalue=25
              }

          }
        }
    'Technical Skills' = keyvalues
        {
            singular = "Technical Skill" 
            editablekeys = character
            keys = ["Computer programming and repair", "Demolitions", "Droid programming and repair", "First aid", "Repulsorlift repair","Security","Spaceship repair"]
            valueType = custom
          {
              Points=integer
              {
                valuedice=(starDice((pointsToDice((Points + ((Attributes.'Technical').Points)))), 0))
                render=(pointsToSkill((Points + ((Attributes.'Technical').Points))))
                
                default=0
                minvalue=0
                maxvalue=25
              }

          }
        }
    'Jedi skills' = keyvalues
        {
          visible=(boolToVisible ((General.'Force sensitive')))
          singular = "Jedi skill" 
          keys = ["Control","Sense","Alter"]
          valueType = custom
          {
              Points=integer
              {
                valuedice=(starDice((pointsToDice(Points)), 0))
                render=(pointsToSkill(Points))
                default=0
                minvalue=0
                maxvalue=25
              }

          }
        }
    'Force powers' = list
        {
          visible=(boolToVisible ((General.'Force sensitive')))
          singular = "Force Power" 
          source=(secondary.'Force powers')
          editable = character 
        }
     General = table{
              'Force Points'=integer
              {
                default=0
                minvalue=0
              }
              'Dark Side Points'=integer
              {
                default=0
                minvalue=0
              }
              'Character Points'=integer
              {
                default=0
                minvalue=0
              }
              'Force sensitive' = bool
              {

              }
     }
    Injuries= table{
      'None'= bool
          {
                  editable=live
                  radiogroup="injury"
          }
      'Stunned'= bool
          {
                  editable=live
                  radiogroup="injury"
          }
      'Wounded'= bool
          {
                  editable=live
                  radiogroup="injury"
          }
      'Wounded twice'= bool
          {
                  editable=live
                  radiogroup="injury"
          }
      'Incapacitated'= bool
          {
                  editable=live
                  radiogroup="injury"
          }
      'Mortally wounded'= bool
          {
                  editable=live
                  radiogroup="injury"
          }
    }
       'Injury Levels'= table
        {
          'Stunned'="0 - 3"
          'Wounded'="4 - 8"
          'Incapacitated'="9 - 12"
          'Mortally wounded'="13 - 15"
          'Killed'="16+"
        }
    Difficulty=table{
      'Very Easy' = "1 - 5"
      Easy = "6 - 10"
      Moderate = "11 - 15"
      Difficult = "16 - 20"
      'Very Difficult' = "21 - 30"
      Heroic = "31+"
    }

    'Melee weapons' = list
    {
        tableLayout = layout
        {
        }
        source=(secondary.'Melee weapons')
        singular = "Melee weapon"
        editable = character 
    }
    'Ranged weapons' = list
    {
        tableLayout = layout
        {
        }
        source=(secondary.'Ranged weapons')
        singular = "Ranged weapon"
        editable = character 
    }
    'Armour' = list
    {
        tableLayout = layout
        {
        }
        source=(secondary.Armour)
        singular = "Armour"
        editable = character 
    }
    'Other items' = list
    {
        tableLayout = layout
        {
        }
        source=(secondary.'Other items')
        singular = "Item"
        editable = character 
    }
    'Spaceships' = list
    {
        tableLayout = layout
        {
        }
        source=(secondary.Spaceships)
        singular = "Spaceship"
        editable = character 
    }
}

meleeWeaponStats =ruleset
        {
            Stats= table
            {
                Damage=string
                {}
            }
        }
rangedWeaponStats =ruleset
        {
            Stats= table
            {
                Damage=string
                {}
                Ammo=string
                {}
                Range=string
                {}
            }
        }
armourStats= ruleset
        {
            Stats= table
            {
                'Armor Value'=string{}
            }
        }
otherStats= ruleset
        {
            Stats= table
            {
            }
        }

boolToVisible (flag)=
  (if flag
    then visible
   else 
      none)

spaceshipTable= ruleset
        {
          Basics = table {
            Type =string{}
            Scale =string{}
            Length =string{}
            Skill =string{}
            crew =integer{}
            Maneuverability = string{}
            Space=integer{}
            Atmosphere= string{}
            Hull= string{}
            Shields= string{}
            Hyperdrive= string{}
          }
          Sensors = 
            table
            {
              Passive = table {
                  Range=integer
                  {
                  }
                  Value=string
                  {
                  }}
              Scan = table {
                  Range=integer
                  {
                  }
                  Value=string
                  {
                  }}
              Search = table {
                  Range=integer
                  {
                  }
                  Value=string
                  {
                  }}
              Focus = table {
                  Range=integer
                  {
                  }
                  Value=string
                  {
                  }}
            }
          Weapons = 
            list
            {
              singular = "Weapon"
              editable = character 
              source=(secondary.ShipWeapons)
                  }
              }
      shipWeaponStats =ruleset
              {
            Stats= table
            {
                Skill= string{}
                'Fire Control'= string{}
                'Space Range'= string{}
                'Atmosphere Range'= string{}
                Damage= string{}
            }
        }

forcePowerStats= ruleset
        {
                'Power'=keyvalues{
                  keys=["Sense","Control", "Alter"]
                  valueType = custom 
                  { 
                    Used = bool
                    { 
                      default = 0 
                      valuedice =  edgeRoll
                    }
                    Difficulty = string
                    { 
                      visible=(boolToVisible (Used))
                      keys=["Very Easy","Easy", "Moderate","Difficult","Very Difficult","Heroic"]
                    }
                  }
                }
                Details = table
                {
                  Effect=string{
                    multiline = true}
                  'Required Powers' = string
                  {
                  }
                  'Time to Use' = string{}
                  'Keep Up' = bool{}
                }

        }

Starwars = system
{
    characters = characterTable
    creatures = characterTable
    Spaceships = spaceshipTable
    ShipWeapons = shipWeaponStats
    'Ranged weapons'= rangedWeaponStats
    'Melee weapons'= meleeWeaponStats
    'Force powers' = forcePowerStats
    Armour= armourStats
    'Other items'= otherStats
    description="Starwars d6"
    secondaryTypes = ["Ranged weapons","Melee weapons","Armour","Spaceships","Other items","Force powers"]
    extraEntityTypes = [
      (entityTypeDescription("Spaceships","spaceship",true, "/systems/starwars/spaceship-entity.png", ["ShipWeapons"]))
      ]
    cssFiles = ["/systems/starwars/starwars.css"]
    quickdice =[1d6]
}

