

#include "/systems/DND/Classes.frules"
#include "/systems/DND/Features.frules"
#include "/systems/DND/Hitpoints.frules"
#include "/systems/DND/Basics.frules"
#include "/systems/DND/Races.frules"
#include "/systems/DND/SavingThrows.frules"

characterTable = ruleset
{
  rulesetConfiguration = configuration
  {
    initative=((characterTable.Basics).'Initiative')
  }
  Basics = basicsTable{}
  Race = raceTable {}
  Class = classTable{}
  
  'Ability scores' = keyvalues
      {
          singular = "Ability score" 
          keys = ["Str","Dex","Con","Int","Wis","Cha" ]
          valueType = custom
          {
              Score=integer
              {
                default=10
                minvalue=3
                maxvalue=25
              }
              Modifier=modifier
              {
                value=((Score/2)-5)
                valuedice=1d20
              }

          }
      } 
  'Saving throws' = savingThrowsTable {}
  Skills = table
      {
        tableLayout = layout
        {
          columns = 2
        }
          Acrobatics = custom
          {
              Modifier=modifier
              {
                value= 
                 ((('Ability scores'.'Dex').Modifier) + 
                  (if Proficient then 
                    ((characterTable.Basics).'Proficiency bonus')
                   else 
                    0)
                 )
                valuedice=1d20
              }
              Proficient = bool
              {

              }
            }
          'Animal Handling' =custom
          {
              Modifier=modifier
              {
                value= 
                 ((('Ability scores'.'Wis').Modifier) + 
                  (if Proficient then 
                    ((characterTable.Basics).'Proficiency bonus')
                   else 
                    0)
                 )
                valuedice=1d20
              }
              Proficient = bool
              {

              }
            }
          Arcana =custom
          {
              Modifier=modifier
              {
                value= 
                 ((('Ability scores'.'Int').Modifier) + 
                  (if Proficient then 
                    ((characterTable.Basics).'Proficiency bonus')
                   else 
                    0)
                 )
                valuedice=1d20
              }
              Proficient = bool
              {

              }
            }
          Athletics = custom
          {
              Modifier=modifier
              {
                value= 
                 ((('Ability scores'.'Str').Modifier) + 
                  (if Proficient then 
                    ((characterTable.Basics).'Proficiency bonus')
                   else 
                    0)
                 )
                valuedice=1d20
              }
              Proficient = bool
              {

              }
            }
          Deception =custom
          {
              Modifier=modifier
              {
                value= 
                 ((('Ability scores'.'Cha').Modifier) + 
                  (if Proficient then 
                    ((characterTable.Basics).'Proficiency bonus')
                   else 
                    0)
                 )
                valuedice=1d20
              }
              Proficient = bool
              {

              }
            }
          History=custom
          {
              Modifier=modifier
              {
                value= 
                 ((('Ability scores'.'Int').Modifier) + 
                  (if Proficient then 
                    ((characterTable.Basics).'Proficiency bonus')
                   else 
                    0)
                 )
                valuedice=1d20
              }
              Proficient = bool
              {

              }
            }
          Insight=custom
          {
              Modifier=modifier
              {
                value= 
                 ((('Ability scores'.'Wis').Modifier) + 
                  (if Proficient then 
                    ((characterTable.Basics).'Proficiency bonus')
                   else 
                    0)
                 )
                valuedice=1d20
              }
              Proficient = bool
              {

              }
            }
          Intimidation=custom
          {
              Modifier=modifier
              {
                value= 
                 ((('Ability scores'.'Cha').Modifier) + 
                  (if Proficient then 
                    ((characterTable.Basics).'Proficiency bonus')
                   else 
                    0)
                 )
                valuedice=1d20
              }
              Proficient = bool
              {

              }
            }
          Investigation=custom
          {
              Modifier=modifier
              {
                value= 
                 ((('Ability scores'.'Int').Modifier) + 
                  (if Proficient then 
                    ((characterTable.Basics).'Proficiency bonus')
                   else 
                    0)
                 )
                valuedice=1d20
              }
              Proficient = bool
              {

              }
            }
          Medicine=custom
          {
              Modifier=modifier
              {
                value= 
                 ((('Ability scores'.'Wis').Modifier) + 
                  (if Proficient then 
                    ((characterTable.Basics).'Proficiency bonus')
                   else 
                    0)
                 )
                valuedice=1d20
              }
              Proficient = bool
              {

              }
            }
          Nature=custom
          {
              Modifier=modifier
              {
                value= 
                 ((('Ability scores'.'Int').Modifier) + 
                  (if Proficient then 
                    ((characterTable.Basics).'Proficiency bonus')
                   else 
                    0)
                 )
                valuedice=1d20
              }
              Proficient = bool
              {

              }
            }
          Perception=custom
          {
              Modifier=modifier
              {
                value= 
                 ((('Ability scores'.'Wis').Modifier) + 
                  (if Proficient then 
                    ((characterTable.Basics).'Proficiency bonus')
                   else 
                    0)
                 )
                valuedice=1d20
              }
              Proficient = bool
              {

              }
            }
          Performance=custom
          {
              Modifier=modifier
              {
                value= 
                 ((('Ability scores'.'Cha').Modifier) + 
                  (if Proficient then 
                    ((characterTable.Basics).'Proficiency bonus')
                   else 
                    0)
                 )
                valuedice=1d20
              }
              Proficient = bool
              {

              }
            }
          Persuasion=custom
          {
              Modifier=modifier
              {
                value= 
                 ((('Ability scores'.'Cha').Modifier) + 
                  (if Proficient then 
                    ((characterTable.Basics).'Proficiency bonus')
                   else 
                    0)
                 )
                valuedice=1d20
              }
              Proficient = bool
              {

              }
            }
          Religion=custom
          {
              Modifier=modifier
              {
                value= 
                 ((('Ability scores'.'Int').Modifier) + 
                  (if Proficient then 
                    ((characterTable.Basics).'Proficiency bonus')
                   else 
                    0)
                 )
                valuedice=1d20
              }
              Proficient = bool
              {

              }
            }
          'Sleight of Hand'=custom
          {
              Modifier=modifier
              {
                value= 
                 ((('Ability scores'.'Dex').Modifier) + 
                  (if Proficient then 
                    ((characterTable.Basics).'Proficiency bonus')
                   else 
                    0)
                 )
                valuedice=1d20
              }
              Proficient = bool
              {

              }
            }
          Stealth=custom
          {
              Modifier=modifier
              {
                value= 
                 ((('Ability scores'.'Dex').Modifier) + 
                  (if Proficient then 
                    ((characterTable.Basics).'Proficiency bonus')
                   else 
                    0)
                 )
                valuedice=1d20
              }
              Proficient = bool
              {

              }
            }
          Survival=custom
          {
              Modifier=modifier
              {
                value= 
                 ((('Ability scores'.'Wis').Modifier) + 
                  (if Proficient then 
                    ((characterTable.Basics).'Proficiency bonus')
                   else 
                    0)
                 )
                valuedice=1d20
              }
              Proficient = bool
              {

              }
            }
      } 
  'Hitpoints' = hitpoints{}

  'Features and Traits' = features{}
    'Melee weapons' = list
    {
        tableLayout = layout
        {
        }
        source=(secondary.meleeweapons)
        singular = "Melee weapon"
        editable = character 
    }
    'Ranged weapons' = list
    {
        tableLayout = layout
        {
        }
        source=(secondary.rangedweapons)
        singular = "Ranged weapon"
        editable = character 
    }
    'Armour' = list
    {
        tableLayout = layout
        {
        }
        source=(secondary.armour)
        singular = "armour"
        editable = character 
    }
    'Other items' = list
    {
        tableLayout = layout
        {
        }
        source=(secondary.items)
        singular = "Item"
        editable = character 
    }
    'Cantrips' = table
    {
        tableLayout = layout
        {
          size = wide
        }
        Slots = slots 
        {
            number = 10
            allowedchange = increaseAndClear
        }
        Spells = list
        {
          tableLayout = layout
          {
            size = wide
          }
          source=(secondary.spells) 
          singular = "Spell"
          editable = character 
          filter = (((spellStats.Stats).level) == 0)
        }
    }
    '1st Level Spells' = table
    {
        tableLayout = layout
        {
          size = wide
        }
        Slots = slots 
        {
            number = 10
            allowedchange = increaseAndClear
        }
        Spells = list
        {
          tableLayout = layout
          {
            size = wide
          }
          source=(secondary.spells) 
          singular = "Spell"
          editable = character 
          filter = (((spellStats.Stats).level) == 1)
        }
    }
    '2nd Level Spells' = table
    {
        tableLayout = layout
        {
          size = wide
        }
        Slots = slots 
        {
            number = 10
            allowedchange = increaseAndClear
        }
        Spells = list
        {
          tableLayout = layout
          {
            size = wide
          }
          source=(secondary.spells) 
          singular = "Spell"
          editable = character 
          filter = (((spellStats.Stats).level) == 2)
        }
    }
    '3rd Level Spells' = table
    {
        tableLayout = layout
        {
          size = wide
        }
        Slots = slots 
        {
            number = 10
            allowedchange = increaseAndClear
        }
        Spells = list
        {
          tableLayout = layout
          {
            size = wide
          }
          source=(secondary.spells) 
          singular = "Spell"
          editable = character 
          filter = (((spellStats.Stats).level) == 3)
        }
    }
    '4th Level Spells' = table
    {
        tableLayout = layout
        {
          size = wide
        }
        Slots = slots 
        {
            number = 10
            allowedchange = increaseAndClear
        }
        Spells = list
        {
          tableLayout = layout
          {
            size = wide
          }
          source=(secondary.spells) 
          singular = "Spell"
          editable = character 
          filter = (((spellStats.Stats).level) == 4)
        }
    }
    '5th Level Spells' = table
    {
        tableLayout = layout
        {
          size = wide
        }
        Slots = slots 
        {
            number = 10
            allowedchange = increaseAndClear
        }
        Spells = list
        {
          tableLayout = layout
          {
            size = wide
          }
          source=(secondary.spells) 
          singular = "Spell"
          editable = character 
          filter = (((spellStats.Stats).level) == 5)
        }
    }
    '6th Level Spells' = table
    {
        tableLayout = layout
        {
          size = wide
        }
        Slots = slots 
        {
            number = 10
            allowedchange = increaseAndClear
        }
        Spells = list
        {
          tableLayout = layout
          {
            size = wide
          }
          source=(secondary.spells) 
          singular = "Spell"
          editable = character 
          filter = (((spellStats.Stats).level) == 6)
        }
    }
    '7th Level Spells' = table
    {
        tableLayout = layout
        {
          size = wide
        }
        Slots = slots 
        {
            number = 10
            allowedchange = increaseAndClear
        }
        Spells = list
        {
          tableLayout = layout
          {
            size = wide
          }
          source=(secondary.spells) 
          singular = "Spell"
          editable = character 
          filter = (((spellStats.Stats).level) == 7)
        }
    }
    '8th Level Spells' = table
    {
        tableLayout = layout
        {
          size = wide
        }
        Slots = slots 
        {
            number = 10
            allowedchange = increaseAndClear
        }
        Spells = list
        {
          tableLayout = layout
          {
            size = wide
          }
          source=(secondary.spells) 
          singular = "Spell"
          editable = character 
          filter = (((spellStats.Stats).level) == 8)
        }
    }
    '9th Level Spells' = table
    {
        tableLayout = layout
        {
          size = wide
        }
        Slots = slots 
        {
            number = 10
            allowedchange = increaseAndClear
        }
        Spells = list
        {
          tableLayout = layout
          {
            size = wide
          }
          source=(secondary.spells) 
          singular = "Spell"
          editable = character 
          filter = (((spellStats.Stats).level) == 9)
        }
    }
}