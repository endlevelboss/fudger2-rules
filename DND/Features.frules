classFeatures(classname,level) = 
    (map 
        (
            ((feature)->(nameAndDescription((feature:Name),(feature:Description)))),
              (filter( ((f)->((f:Level)<(level+1))),
                ((first ((filter (((class)->((class:Name) == classname)), classInfo))))
                :Features)))
                )
        )

raceFeatures(main, subrace)=
   (if (subrace=="Standard") then
    ((getRace(main)):Features)
   else
    ((getSubrace(main,subrace)):Features))

features= table
{
    tableLayout = layout
    {
        size = wide
        rowTitle = hidden
    }
    'Class features'=list
    {
        tableLayout = layout
        {
            size = wide
            rowTitle = hidden
        }
          source=(classFeatures (Class.Main.Name, Class.Main.Levels))
          singular = "Feature"
          editable = none 
    }
    'Race features'=list
    {
        tableLayout = layout
        {
            size = wide
            rowTitle = hidden
        }
          source=(raceFeatures (Race.Main, Race.Subrace))
          singular = "Feature"
          editable = none 
    }
    'Other features'=list
    { 
        tableLayout = layout
        {
          size = wide
        }
        singular = "Feature"
        editable = character
        valueType = nameAndDescription
    }
}